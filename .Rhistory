pivot_wider(names_from = "Gen_Rank",
values_from = "Name") %>%
rename("Rank 1" = "1", "Rank 2" = "2", "Rank 3" = "3",
"Rank 4" = "4", "Rank 5" = "5")
# Separating out the male names and pulling the top five per generation
BigTable_M <- Generation_rank %>%
filter(Sex == "Male") %>%
group_by(Sex, Generation) %>%
arrange(Gen_Rank, Generation) %>%
slice(1:5) %>%
select("Generation", "Gen_Rank", "Sex", "Name") %>%
pivot_wider(names_from = "Gen_Rank",
values_from = "Name") %>%
rename("Rank 1" = "1", "Rank 2" = "2", "Rank 3" = "3",
"Rank 4" = "4", "Rank 5" = "5")
# joining the female and male top five names per generation tables
BigTable <- bind_rows(BigTable_F, BigTable_M)
# arrange by generation
BigTable <- arrange(BigTable, Generation)
# final table with design
kable(BigTable, format = "html") %>%
kable_styling() %>%
row_spec(0, bold = TRUE, color = "#EFEFF0",
background = "#4357AD") %>%
row_spec(1, color = "#F27059", background = "#FFFCF9") %>%
row_spec(2, color = "#2A9D8F", background = "#FFFCF9") %>%
row_spec(3, color = "#F27059", background = "#EFEFF0") %>%
row_spec(4, color = "#2A9D8F", background = "#EFEFF0") %>%
row_spec(5, color = "#F27059", background = "#FFFCF9") %>%
row_spec(6, color = "#2A9D8F", background = "#FFFCF9") %>%
row_spec(7, color = "#F27059", background = "#EFEFF0") %>%
row_spec(8, color = "#2A9D8F", background = "#EFEFF0") %>%
row_spec(9, color = "#F27059", background = "#FFFCF9") %>%
row_spec(10, color = "#2A9D8F", background = "#FFFCF9") %>%
row_spec(11, color = "#F27059", background = "#EFEFF0") %>%
row_spec(12, color = "#2A9D8F", background = "#EFEFF0") %>%
row_spec(13, color = "#F27059", background = "#FFFCF9") %>%
row_spec(14, color = "#2A9D8F", background = "#FFFCF9") %>%
row_spec(15, color = "#F27059", background = "#EFEFF0") %>%
row_spec(16, color = "#2A9D8F", background = "#EFEFF0") %>%
column_spec(1, color = "#4357AD", bold = TRUE)
# Chunk 14
# set color vector
color_v1 <- c("#406DB5", "#E84855", "#A09FD0", "#28AFB0", "#FCCA46")
# visualization with top names in each generation, comparing occurrences by sex
Generation_rank %>%
group_by(Generation, Sex) %>%
arrange(Gen_Rank, Generation) %>%
slice(1:5) %>%
ggplot(aes(x = Sex, y = SumGen_Occurrences, fill = as.factor(Gen_Rank), position="dodge")) +
geom_col() + facet_wrap(~ Generation, scales="free") +
scale_y_continuous(labels = function(x) { paste0(x / 1000000, " mil")}) +
scale_fill_manual(values = color_v1) +
geom_text(aes(label = Name), size = 3, color = "#1C1018", position = position_stack(vjust = 0.5)) +
labs(title = "Top 5 Names of Each Generation by Sex",
x = "", y = "Total Occurrences",
fill = "Generation Rank") +
theme_bw()
# Chunk 15
# Creates two new variables, Sum_Occurrences and Year_Rank.
BabyNames_rank <- BabyNames %>%
group_by(Year, Sex, Name) %>%
summarize("Sum_Occurrences" = sum(Occurrences)) %>%
mutate(Year_Rank = min_rank(desc(Sum_Occurrences)))
# Chunk 16
# create the Proportion variable
BabyNames_prop <- BabyNames_rank %>%
group_by(Year, Sex) %>%
mutate(Year_Total_Occurrences = sum(Sum_Occurrences)) %>%
mutate(Proportion = Sum_Occurrences/Year_Total_Occurrences)
# Chunk 17
# graph of top three names for each year by sex
color_prop <-  c("#F0544F", "goldenrod1", "cornflowerblue")
BabyNames_prop %>%
filter(Year_Rank <= 3) %>%
ggplot(aes(Year, Proportion, group = as.factor(Year_Rank),
colour = as.factor(Year_Rank))) +
geom_line() +
scale_color_manual(values = color_prop) +
geom_smooth(linetype = "11", se = FALSE, alpha = 0.7, size = .75) +
labs(title = "Proportion of Top Three Names Each Year, by Sex",
subtitle = "The proportion of babies with popular names decreases as time goes on, although this trend
is much stronger among male names than female ones",
color = "Name Rank") +
facet_wrap(~ Sex)
# Chunk 18
# Bar graph of number of distinct names by generation
BabyNames_gen %>%
group_by(Generation, Sex) %>%
summarize("Unique_Names" = n_distinct(Name)) %>%
ggplot(aes(x = Generation, y = Unique_Names, fill = Sex)) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#F27059", "#2A9D8F")) +
theme_minimal() +
labs(title = "Number of Unique Names in Each Generation, by Sex",
y = "Number of Unique Names") +
theme(axis.text.x = element_text(angle = 60, vjust = 0.55)) +
scale_y_continuous(labels = function(x) { paste0(x / 1000, "k")})
# Chunk 19
# compares the average occurrences of the names Chris and Christoper in the 1980s
BabyNames_prop %>%
filter(Sex == "Male") %>%
group_by(Name) %>%
filter(Year >1980 & Year < 1989) %>%
filter(Name == "Christopher" | Name == "Chris") %>%
summarize(Avg_Occur = mean(Sum_Occurrences))
# Chunk 20
# graph the ranking of names Oliver and Christopher over time
OliChri_Rank <- BabyNames_prop %>%
filter(Sex == "Male") %>%
filter(Name %in% c("Oliver", "Christopher")) %>%
ggplot(aes(Year, Year_Rank, group = as.factor(Name),
colour = as.factor(Name))) +
geom_line() +
scale_y_reverse() +
scale_color_manual(values = c("#DB272A", "#5887FF")) +
labs(title = "Oliver vs Christopher: Ranking",
color = "Name",
y = "Ranking")
OliChri_Rank
# Chunk 21
# shows the average ranking of the name Christopher from 1970 to 2000
BabyNames_prop %>%
filter(Sex == "Male") %>%
group_by(Name) %>%
filter(Year >1970 & Year < 2000) %>%
filter(Name == "Christopher") %>%
summarize(Avg_Rank = mean(Year_Rank))
# Chunk 22
# graph the proportion of babies named Oliver and Christopher over time
OliChri_Prop <- BabyNames_prop %>%
filter(Sex == "Male") %>%
filter(Name %in% c("Oliver", "Christopher")) %>%
ggplot(aes(Year, Proportion, group = as.factor(Name),
colour = as.factor(Name))) +
geom_line() +
scale_color_manual(values = c("#DB272A", "#5887FF", "#00A8E8")) +
labs(title = "Oliver vs Christopher: Proportion",
subtitle = "The proportion of babies given this name in a given year.",
color = "Name",
y = "Proportion")
OliChri_Prop
# Chunk 23
# graph the annual occurrences of names Oliver and Christopher over time
OliChri_Occur <- BabyNames_prop %>%
filter(Sex == "Male") %>%
filter(Name %in% c("Oliver", "Christopher")) %>%
ggplot(aes(Year, Sum_Occurrences, group = as.factor(Name),
colour = as.factor(Name))) +
geom_line() +
scale_color_manual(values = c("#DB272A", "#5887FF", "#00A8E8")) +
labs(title = "Oliver vs Christopher: Occurrences",
subtitle = "The total number of babies in the United States given this name in a given year.",
color = "Name",
y = "Occurrences")
OliChri_Occur
# Chunk 24
# 1885 - 1985
# Use the Year_Rank variable created earlier to limit the data to just the top 100 names in each year.
Top1885 <- BabyNames_prop %>%
filter(Year == 1885) %>%
filter(Year_Rank <=100)
Top1985 <- BabyNames_prop %>%
filter(Year == 1985) %>%
filter(Year_Rank <=100)
# Join two datasets
BabyNames_Cyclical85 <- full_join(Top1885, Top1985, by = "Name")
# Filter only names appearing in top 100 of both years
PopCyclical85 <- BabyNames_Cyclical85 %>%
filter(Year.x == 1885 & Year.y == 1985) %>%
mutate(CombinedRank = Year_Rank.x + Year_Rank.y) %>%
arrange(CombinedRank) %>%
group_by(Sex.x)
# Clean up this table and rename some of the variables so it's nicer to look at
PopCyclical85_Table <- PopCyclical85 %>%
select(-Sex.y, -Year.x, -Year.y, -Year_Total_Occurrences.x, -Year_Total_Occurrences.y,
-Proportion.y, -Proportion.x) %>%
setNames(c("Sex", "Name", "1885 Occurrences",
"1885 Rank", "1985 Occurrences", "1985 Rank",
"Combined Rank"))
# create a color palette for all visualizations for this research question
color_v2 <- c("#DB272A", "#44AF69", "#8390FA", "#669BBC",
"lightsalmon", "#00A8E8", "#F26419", "#5887FF",
"#E9C46A", "darkorchid", "darkslateblue",
"cadetblue", "#F58F00", "cadetblue1", "#F694C1",
"darkblue", "#813405", "#1DD3B0", "indianred1",
"darkolivegreen1")
# plot female name popularity change over time for names popular in 1885 and 1985.
F_85_Plotly <- BabyNames_prop %>%
filter(Sex == "Female") %>%
filter(Name %in% c("Elizabeth", "Anna", "Sarah", "Mary", "Laura",
"Katherine", "Emily", "Catherine", "Julia", "Katie",
"Kathryn", "Amanda", "Margaret", "Carrie", "Rebecca")) %>%
ggplot(aes(Year, Year_Rank, group = as.factor(Name),
colour = as.factor(Name))) +
geom_line() +
geom_vline(xintercept = c(1885, 1985), linetype = "dotted", alpha = 0.5) +
scale_y_reverse(limits=c(1350,0)) +
scale_color_manual(values = color_v2) +
labs(title = "Cyclical Popularity: 1885 and 1985",
subtitle = "These names were popular for female babies born in 1885 and 1985.",
color = "Name",
y = "Ranking",
caption = "Source: https://www.ssa.gov/oact/babynames/") +
theme_bw()
# use plotly to show an interactive version of the graph
ggplotly(F_85_Plotly) %>%
layout(title = list(text = paste0("Names Popular in Both 1885 and 1985 for Female Babies",
'<br>',
'<sup>',
'The dotted gray lines indicate the key years - 1885 and 1985 (Hover over lines to see names)','</sup>')))
# Chunk 25
# 1920 - 2020
# Use the Year_Rank variable I created earlier to limit the data to just the top 100 names in each year.
Top1920 <- BabyNames_prop %>%
filter(Year == 1920) %>%
filter(Year_Rank <=100)
Top2020 <- BabyNames_prop %>%
filter(Year == 2020) %>%
filter(Year_Rank <=100)
# Join two datasets
BabyNames_Cyclical20 <- full_join(Top1920, Top2020, by = "Name")
# Filter only names appearing in top 100 of both years
PopCyclical20 <- BabyNames_Cyclical20 %>%
filter(Year.x == 1920 & Year.y == 2020) %>%
mutate(CombinedRank = Year_Rank.x + Year_Rank.y) %>%
arrange(CombinedRank) %>%
group_by(Sex.x)
# Clean up this table and rename some of the variables so it's nicer to look at
PopCyclical20_Table <- PopCyclical20 %>%
select(-Sex.y, -Year.x, -Year.y, -Year_Total_Occurrences.x, -Year_Total_Occurrences.y,
-Proportion.y, -Proportion.x) %>%
setNames(c("Sex", "Name", "1920 Occurrences",
"1920 Rank", "2020 Occurrences", "2020 Rank",
"Combined Rank"))
# plot female name popularity change over time for names popular in 1920 and 2020
F_20_Plotly <- BabyNames_prop %>%
filter(Sex == "Female") %>%
filter(Name %in% c("Elizabeth", "Anna", "Sarah", "Evelyn", "Charlotte",
"Eleanor", "Emma", "Lillian", "Alice", "Hazel",
"Grace", "Ruby", "Ella", "Stella", "Violet",
"Eva", "Lucy", "Josephine")) %>%
ggplot(aes(Year, Year_Rank, group = as.factor(Name),
colour = as.factor(Name))) +
geom_line() +
geom_vline(xintercept = c(1920, 2020), linetype = "dotted", alpha = 0.5) +
scale_y_reverse(limits=c(1350,0)) +
scale_color_manual(values = color_v2) +
labs(title = "Cyclical Popularity: 1920 and 2020",
subtitle = "These names were popular for female babies born in 1920 and 2020.",
color = "Name",
y = "Ranking")
# use plotly to show an interactive version of the graph
ggplotly(F_20_Plotly) %>%
layout(title = list(text = paste0("Names Popular in Both 1920 and 2020 for Female Babies",
'<br>',
'<sup>',
'The dotted gray lines indicate the key years - 1920 and 2020 (Hover over lines to see names)','</sup>')))
# Chunk 26
# larger color vector for 1885/1985 male names graph
color_v3 <- c("#DB272A", "#44AF69", "#8390FA", "#669BBC",
"lightsalmon", "#00A8E8", "#F26419", "#5887FF",
"#E9C46A", "darkorchid", "darkslateblue",
"cadetblue", "#F58F00", "cadetblue1", "#F694C1",
"darkblue", "#813405", "#1DD3B0", "indianred1",
"darkolivegreen1", "salmon", "cornflowerblue",
"orange", "red", "black", "blue", "green", "purple",
"yellow", "maroon")
# 1885 - 1985
# plot male name popularity change over time for names popular in 1885 and 1985
M_85_Plotly <- BabyNames_prop %>%
filter(Sex == "Male") %>%
filter(Name %in% c("James", "John", "Joseph", "Robert", "William",
"David", "Thomas", "Daniel", "Charles", "Andrew",
"Michael", "Richard", "Benjamin", "Edward", "Samuel",
"George", "Jesse", "Paul", "Jacob", "Peter",
"Frank", "Patrick", "Anthony", "Alexander", "Stephen",
"Raymond", "Alex", "Philip", "Victor")) %>%
ggplot(aes(Year, Year_Rank, group = as.factor(Name),
colour = as.factor(Name))) +
geom_line() +
geom_vline(xintercept = c(1885, 1985), linetype = "dotted", alpha = 0.5) +
scale_y_reverse(limits=c(675,0)) +
scale_color_manual(values = color_v3) +
labs(title = "Cyclical Popularity: 1885 and 1985",
subtitle = "These names were popular for male babies born in 1885 and 1985.",
color = "Name",
y = "Ranking",
caption = "Source: https://www.ssa.gov/oact/babynames/")
# use plotly to show an interactive version of the graph
ggplotly(M_85_Plotly) %>%
layout(title = list(text = paste0("Names Popular in Both 1885 and 1985 for Male Babies",
'<br>',
'<sup>',
'The dotted gray lines indicate the key years - 1885 and 1985 (Hover over lines to see names)','</sup>')))
# 1920 - 2020
# plot male name popularity change over time for names popular in 1920 and 2020
M_20_Plotly <- BabyNames_prop %>%
filter(Sex == "Male") %>%
filter(Name %in% c("William", "James", "Henry", "John", "Joseph", "Jack",
"Charles", "David", "Thomas", "Michael", "Daniel", "Samuel",
"Robert", "Anthony", "Leo", "Theodore", "Benjamin", "Andrew",
"Everett")) %>%
ggplot(aes(Year, Year_Rank, group = as.factor(Name),
colour = as.factor(Name))) +
geom_line() +
geom_vline(xintercept = c(1920, 2020), linetype = "dotted", alpha = 0.5) +
scale_y_reverse(limits=c(675,0)) +
scale_color_manual(values = color_v2) +
labs(title = "Cyclical Popularity: 1920 and 2020",
subtitle = "These names were popular for males babies born in 1920 and 2020.",
color = "Name",
y = "Ranking",
caption = "Source: https://www.ssa.gov/oact/babynames/")
# use plotly to show an interactive version of the graph
ggplotly(M_20_Plotly) %>%
layout(title = list(text = paste0("Names Popular in Both 1920 and 2020 for Male Babies",
'<br>',
'<sup>',
'The dotted gray lines indicate the key years - 1920 and 2020 (Hover over lines to see names)','</sup>')))
# Chunk 27
# create an average sex ratio variable and show per generation
BabyNames_gen %>%
group_by(Year, Sex, Generation) %>%
summarize(Sum_Occurrences = sum(Occurrences)) %>%
pivot_wider(names_from = Sex, values_from = Sum_Occurrences) %>%
mutate(Sex_Ratio = Male/Female) %>%
group_by(Generation) %>%
summarize("Average Sex Ratio" = mean(Sex_Ratio))
# graph the ranking of names Theodora and Thea over time
Baby2024 <- BabyNames_prop %>%
filter(Sex == "Female") %>%
#filter(Year >1980) %>%
filter(Name %in% c("Zia", "Lucy", "Thea")) %>%
ggplot(aes(Year, Year_Rank, group = as.factor(Name),
colour = as.factor(Name))) +
geom_line() +
scale_y_reverse() +
scale_color_manual(values = c("goldenrod1", "cornflowerblue", "#F0544F")) +
labs(title = "Girl's Name Ranking",
color = "Name",
y = "Ranking")
Baby2024
# ("#F0544F", "goldenrod1", "cornflowerblue")
Baby2024
# graph the ranking of names Theodora and Thea over time
Baby2024 <- BabyNames_prop %>%
filter(Sex == "Female") %>%
filter(Year >2015) %>%
filter(Name %in% c("Zia", "Lucy", "Thea")) %>%
ggplot(aes(Year, Year_Rank, group = as.factor(Name),
colour = as.factor(Name))) +
geom_line() +
scale_y_reverse() +
scale_color_manual(values = c("goldenrod1", "cornflowerblue", "#F0544F")) +
labs(title = "Girl's Name Ranking",
color = "Name",
y = "Ranking")
Baby2024
# ("#F0544F", "goldenrod1", "cornflowerblue")
Baby2024
# compares the average occurrences of the names
BabyNames_prop %>%
filter(Sex == "Female") %>%
group_by(Name) %>%
filter(Year >2020) %>%
filter(Name == "Zia" | Name == "Thea" | Name == "Lucy") %>%
summarize(Sum_Occurrences, Year_Rank, Year) %>%
arrange(Year_Rank)
# graph the ranking of names Theodora and Thea over time
Baby2024 <- BabyNames_prop %>%
filter(Sex == "Female") %>%
#filter(Year >1980) %>%
filter(Name %in% c("Zia", "Lucy", "Thea")) %>%
ggplot(aes(Year, Year_Rank, group = as.factor(Name),
colour = as.factor(Name))) +
geom_line() +
scale_y_reverse() +
scale_color_manual(values = c("goldenrod1", "cornflowerblue", "#F0544F")) +
labs(title = "Girl's Name Ranking",
color = "Name",
y = "Ranking")
Baby2024
# ("#F0544F", "goldenrod1", "cornflowerblue")
# graph the ranking of names Theodora and Thea over time
Baby2024 <- BabyNames_prop %>%
filter(Sex == "Female") %>%
filter(Year >2015) %>%
filter(Name %in% c("Zia", "Lucy", "Thea")) %>%
ggplot(aes(Year, Year_Rank, group = as.factor(Name),
colour = as.factor(Name))) +
geom_line() +
scale_y_reverse() +
scale_color_manual(values = c("goldenrod1", "cornflowerblue", "#F0544F")) +
labs(title = "Girl's Name Ranking",
color = "Name",
y = "Ranking")
Baby2024
# ("#F0544F", "goldenrod1", "cornflowerblue")
# compares the average occurrences of the names
BabyNames_prop %>%
filter(Sex == "Female") %>%
group_by(Name) %>%
filter(Year >2020) %>%
filter(Name == "Zia" | Name == "Thea" | Name == "Lucy") %>%
summarize(Sum_Occurrences, Year_Rank, Year) %>%
arrange(Year_Rank)
# graph the ranking of BOYS names over time
BabyB2024 <- BabyNames_prop %>%
filter(Sex == "Male") %>%
filter(Year >1900) %>%
filter(Name %in% c("Zia", "Theodore", "Theo")) %>%
ggplot(aes(Year, Year_Rank, group = as.factor(Name),
colour = as.factor(Name))) +
geom_line() +
scale_y_reverse() +
scale_color_manual(values = c("goldenrod1", "cornflowerblue", "#F0544F")) +
labs(title = "Boy's Name Ranking",
color = "Name",
y = "Ranking")
BabyB2024
BabyNames_prop %>%
filter(Sex == "Male") %>%
group_by(Name) %>%
filter(Year >2020) %>%
filter(Name == "Theo" | Name == "Theodore" | Name == "Oliver") %>%
summarize(Sum_Occurrences, Year_Rank, Year) %>%
arrange(Year_Rank)
# graph the ranking of names Theodora and Thea over time
Baby2024 <- BabyNames_prop %>%
filter(Sex == "Female") %>%
filter(Year >2000) %>%
filter(Name %in% c("Zia", "Lucy", "Thea")) %>%
ggplot(aes(Year, Year_Rank, group = as.factor(Name),
colour = as.factor(Name))) +
geom_line() +
scale_y_reverse() +
scale_color_manual(values = c("goldenrod1", "cornflowerblue", "#F0544F")) +
labs(title = "Girl's Name Ranking",
color = "Name",
y = "Ranking")
Baby2024
# ("#F0544F", "goldenrod1", "cornflowerblue")
825*3
825*3*5
825*3
OneClass <- 825*3
OneClass/4
MiriamWeek <- 75*4
MiriamMonth <- 75*4*4.35
MiriamWeek <- 75*4
MiriamWeek
MiriamMonth <- 75*4*4.35
MiriamMonth
ClassPerMonth <- OneClass/4
ClassPerMonth
MiriamWeek <- 75*4
MiriamWeek
MiriamMonth <- 75*4*4.35
MiriamMonth
MiriamMonth + ClassPerMonth
MiriamMonth <- 1150
MiriamMonth
MiriamMonth + ClassPerMonth
MiriamMonthPT <- 3*40*4.35
#Three mornings a week
MiriamMonthPT
MiriamMonthPT + ClassPerMonth
MiriamMonthFT + ClassPerMonth
MiriamMonthFT <- 1150
MiriamMonthFT
MiriamMonthPT <- 3*40*4.35
#Three mornings a week
MiriamMonthPT
MiriamMonthPT + ClassPerMonth
MiriamMonthFT + ClassPerMonth
(MiriamMonthPT + ClassPerMonth)/4.35
(MiriamMonthFT + ClassPerMonth)/4.35
MiriamMonthPT <- 3*40*4.35
#Three mornings a week
MiriamMonthPT
MiriamMonthPT + ClassPerMonth
(MiriamMonthPT + ClassPerMonth)*4
MiriamMonthPT3 <- 3*40*4.35
#Three mornings a week
MiriamMonthPT3
(MiriamMonthPT3 + ClassPerMonth)*4
MiriamMonthPT2 <- 3*40*4.35
#Three mornings a week
MiriamMonthPT2
(MiriamMonthPT2 + ClassPerMonth)*4
MiriamMonthPT2 <- 2*40*4.35
#Three mornings a week
MiriamMonthPT2
(MiriamMonthPT2 + ClassPerMonth)*4
(MiriamMonthPT2 + ClassPerMonth)
Transcript hours:
12+17+15+16.5+15+15+17.5+15.5
MiriamMonthFT
ResAssistPayWeek <- 20*10
ResAssistPayWeek
PayPerMonth <- ResAssistPayWeek*4.35
PayPerMonth
ResAssistPayWeek <- 36*10
ResAssistPayWeek
PayPerMonth <- ResAssistPayWeek*4.35
PayPerMonth
MiriamMonthPT4 <- 4*40*4.35
#Three mornings a week
MiriamMonthPT4
(MiriamMonthPT4 + ClassPerMonth)*4
MiriamMonthPT4 + ClassPerMonth
